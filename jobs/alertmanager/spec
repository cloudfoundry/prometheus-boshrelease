---
name: alertmanager

packages:
  - alertmanager

templates:
  bin/alertmanager_ctl: bin/alertmanager_ctl
  bin/alertmanager_test: bin/alertmanager_test
  bin/pre-start: bin/pre-start
  config/alertmanager.yml: config/alertmanager.yml

provides:
  - name: alertmanager
    type: alertmanager
    properties:
      - alertmanager.mesh.port
      - alertmanager.cluster.port
      - alertmanager.web.port
      - alertmanager.web.route_prefix

consumes:
  - name: alertmanager
    type: alertmanager

properties:
  alertmanager.alerts.gc_interval:
    description: "Interval between alert GC"
  alertmanager.data.retention:
    description: "How long to keep data for"
  alertmanager.log_level:
    description: "Only log messages with the given severity or above. Valid levels: [debug, info, warn, error, fatal]"
  alertmanager.log_format:
    description: "Output format of log messages. One of: [logfmt, json]"
  alertmanager.cluster.listen_address:
    description: "Cluster listen address. By default use IP computed by BOSH spec"
  alertmanager.cluster.advertise_address:
    description: "Cluster advertise address"
  alertmanager.cluster.gossip_interval:
    description: "Interval between sending gossip messages. By lowering this value (more frequent) gossip messages are propagated across the cluster more quickly at the expense of increased bandwidth"
  alertmanager.cluster.peer_timeout:
    description: "Time to wait between peers to send notifications"
  alertmanager.mesh.port:
    description: "Deprecated. Please use alertmanager.cluster.port"
  alertmanager.cluster.enabled:
    description: "Enable clustering of alertmanager for production use"
    default: true
  alertmanager.cluster.port:
    description: "Cluster listen port"
    default: 9094
  alertmanager.cluster.probe_interval:
    description: "Interval between random node probes. Setting this lower (more frequent) will cause the cluster to detect failed nodes more quickly at the expense of increased bandwidth usage"
  alertmanager.cluster.probe_timeout:
    description: "Timeout to wait for an ack from a probed node before assuming it is unhealthy. This should be set to 99-percentile of RTT (round-trip time) on your network"
  alertmanager.cluster.pushpull_interval:
    description: "Interval for gossip state syncs. Setting this interval lower (more frequent) will increase convergence speeds across larger clusters at the expense of increased bandwidth usage"
  alertmanager.cluster.reconnect_interval:
    description: "Interval between attempting to reconnect to lost peers"
  alertmanager.cluster.reconnect_timeout:
    description: "Length of time to attempt to reconnect to a lost peer"
  alertmanager.cluster.settle_timeout:
    description: "Maximum time to wait for cluster connections to settle before evaluating notifications"
  alertmanager.cluster.tcp_timeout:
    description: "Timeout for establishing a stream connection with a remote node for a full state sync, and for stream read and write operations"
  alertmanager.web.external_url:
    description: "The URL under which Alertmanager is externally reachable"
  alertmanager.web.get_concurrency:
    description: "Maximum number of GET requests processed concurrently. If negative or zero, the limit is GOMAXPROC or 8, whichever is larger"
  alertmanager.web.listen_address:
    description: "Address to listen on for the web interface and API. It defaults to '', which listens at [::] or 0.0.0.0."
  alertmanager.web.port:
    description: "Port to listen on for the web interface and API"
    default: "9093"
  alertmanager.web.route_prefix:
    description: "Prefix for the internal routes of web endpoints"
  alertmanager.web.timeout:
    description: "Timeout for HTTP requests. If negative or zero, no timeout is set"

  alertmanager.resolve_timeout:
    description: "ResolveTimeout is the time after which an alert is declared resolved if it has not been updated"

  alertmanager.smtp.from:
    description: "The default SMTP From header field"
  alertmanager.smtp.smarthost:
    description: "The default SMTP smarthost used for sending emails"
  alertmanager.smtp.hello:
    description: "The default hostname to identify to the SMTP server"
  alertmanager.smtp.auth_username:
    description: "SMTP authentication username"
  alertmanager.smtp.auth_password:
    description: "SMTP authentication password"
  alertmanager.smtp.auth_secret:
    description: "SMTP authentication secret"
  alertmanager.smtp.auth_identity:
    description: "SMTP authentication identity"
  alertmanager.smtp.require_tls:
    description: "SMTP TLS requirement"

  alertmanager.slack.api_url:
    description: "The API URL to use for Slack notifications"

  alertmanager.victorops.api_key:
    description: "VictorOps API key"
  alertmanager.victorops.api_url:
    description: "VictorOps API URL"

  alertmanager.pagerduty.url:
    description: "The URL to use for PagerDuty notifications"

  alertmanager.jira.url:
    description: "Jira instance URL"

  alertmanager.opsgenie.api_host:
    description: "The API Host to use for OpsGenie notifications"
  alertmanager.opsgenie.api_key:
    description: "The OpsGenie API Key"

  alertmanager.wechat.api_url:
    description: "The API URL to use for Wechat notifications"
  alertmanager.wechat.api_secret:
    description: "The API Secret to use for Wechat notifications"
  alertmanager.wechat.api_corp_id:
    description: "The API Corp ID to use for Wechat notifications"

  alertmanager.http_config:
    description: "Set global Alertmanager HTTP Config"

  alertmanager.templates:
    description: "Array of file paths from which custom notification template definitions are read"

  alertmanager.route.receiver:
    description: "default receiver"
  alertmanager.route.continue:
    description: "Whether an alert should continue matching subsequent sibling nodes"
  alertmanager.route.group_by:
    description: "The labels by which incoming alerts are grouped together"
  alertmanager.route.group_wait:
    description: "How long to initially wait to send a notification for a group of alerts"
  alertmanager.route.group_interval:
    description: "How long to wait before sending notification about new alerts that are in are added to a group of alerts for which an initial notification has already been sent"
  alertmanager.route.repeat_interval:
    description: "How long to wait before sending a notification again if it has already been sent successfully for an alert"
  alertmanager.route.match:
    description: "A set of equality matchers an alert has to fulfill to match the node"
  alertmanager.route.match_re:
    description: "A set of regex-matchers an alert has to fulfill to match the node"
  alertmanager.route.matchers:
    description: "A list of matchers that an alert has to fulfill to match the node."
  alertmanager.route.routes:
    description: "Child routes"

  alertmanager.receivers:
    description: "Receivers"

  alertmanager.inhibit_rules:
    description: "Inhibition rules"

  alertmanager.mute_time_intervals:
    description: "Mute time intervals for muting routes."
  alertmanager.time_intervals:
    description: "Time intervals for muting/activating routes."

  alertmanager.test_alert.hourly:
    description: "Send a test alert hourly?"
    default: false
  alertmanager.test_alert.daily:
    description: "Send a test alert daily?"
    default: false
  alertmanager.test_alert.weekly:
    description: "Send a test alert weekly?"
    default: false

  env.http_proxy:
    description: "HTTP proxy to use"
  env.https_proxy:
    description: "HTTPS proxy to use"
  env.no_proxy:
    description: "List of comma-separated hosts that should skip connecting to the proxy"
